name: Storage app service CI/CD

on:
  push:
    paths:
      - "storage-app-mail/**"
      - ".github/workflows/github-action-storage-app.yaml"
    branches:
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.2

      - name: Install golangci-lint
        run: |
          go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

      - name: Run Linter
        run: |
          cd storage-app
          golangci-lint run ./...

  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.2
      - name: Build bin
        run: |
          cd storage-app-mail
          export CGO_ENABLED=0 GOOS=linux GOARCH=amd64
          go build -o bin/storage-app-mail cmd/storage-app-mail/main.go

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: storage-app-mail
          path: storage-app-mail/bin/storage-app-mail

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.2

      - name: Run tests
        run: |
          cd storage-app-mail/test
          go test ./... -v -coverprofile=coverage.out

  build-image:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: storage-app-mail
          path: storage-app-mail/bin/

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./storage-app-mail
          file: ./storage-app-mail/Dockerfile
          push: true
          tags: |
            baothaihcmut/storage-app-mail:latest
  
  deploy:
    needs: build-image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Copy config file to server
        run: |
          export GMAIL_APP_PASSWORD="${{ secrets.GMAIL_APP_PASSWORD }}"
          envsubst < environments/helm/storage-app/values.yaml > environments/helm/storage-app/values.env.yaml
      - name: 'Deploy'
        uses: 'deliverybot/helm@v1'
        with:
          release: 'storage-app'
          namespace: 'storage-app'
          chart: 'environments/helm/apps/storage-app-mail'
          token: '${{ github.token }}'
          value-files: >-
          [
            "environments/helm/apps/storage-app-mail/values.env.yaml"
          ]
        env:
          KUBECONFIG_FILE: '${{ secrets.KUBECONFIG }}'
 


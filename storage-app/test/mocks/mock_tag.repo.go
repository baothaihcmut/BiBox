// Code generated by MockGen. DO NOT EDIT.
// Source: internal/modules/tags/repositories/tag.repository.go
//
// Generated by this command:
//
//	mockgen -source=internal/modules/tags/repositories/tag.repository.go -destination=test/mocks/mock_tag.repo.go -package=mocks
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	models "github.com/baothaihcmut/Bibox/storage-app/internal/modules/tags/models"
	primitive "go.mongodb.org/mongo-driver/bson/primitive"
	gomock "go.uber.org/mock/gomock"
)

// MockTagRepository is a mock of TagRepository interface.
type MockTagRepository struct {
	ctrl     *gomock.Controller
	recorder *MockTagRepositoryMockRecorder
	isgomock struct{}
}

// MockTagRepositoryMockRecorder is the mock recorder for MockTagRepository.
type MockTagRepositoryMockRecorder struct {
	mock *MockTagRepository
}

// NewMockTagRepository creates a new mock instance.
func NewMockTagRepository(ctrl *gomock.Controller) *MockTagRepository {
	mock := &MockTagRepository{ctrl: ctrl}
	mock.recorder = &MockTagRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockTagRepository) EXPECT() *MockTagRepositoryMockRecorder {
	return m.recorder
}

// BulkCreateTag mocks base method.
func (m *MockTagRepository) BulkCreateTag(arg0 context.Context, arg1 []*models.Tag) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "BulkCreateTag", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// BulkCreateTag indicates an expected call of BulkCreateTag.
func (mr *MockTagRepositoryMockRecorder) BulkCreateTag(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "BulkCreateTag", reflect.TypeOf((*MockTagRepository)(nil).BulkCreateTag), arg0, arg1)
}

// CreateTag mocks base method.
func (m *MockTagRepository) CreateTag(arg0 context.Context, arg1 *models.Tag) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTag", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// CreateTag indicates an expected call of CreateTag.
func (mr *MockTagRepositoryMockRecorder) CreateTag(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTag", reflect.TypeOf((*MockTagRepository)(nil).CreateTag), arg0, arg1)
}

// FindTagById mocks base method.
func (m *MockTagRepository) FindTagById(arg0 context.Context, arg1 primitive.ObjectID) (*models.Tag, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindTagById", arg0, arg1)
	ret0, _ := ret[0].(*models.Tag)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindTagById indicates an expected call of FindTagById.
func (mr *MockTagRepositoryMockRecorder) FindTagById(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindTagById", reflect.TypeOf((*MockTagRepository)(nil).FindTagById), arg0, arg1)
}

basePath: /api/v1
definitions:
  presenter.ExchangeTokenInput:
    properties:
      auth_code:
        type: string
    type: object
  presenters.CreateFileInput:
    properties:
      description:
        type: string
      has_password:
        description: Use *bool to allow nil check
        type: boolean
      is_folder:
        description: Use *bool to allow nil check
        type: boolean
      is_secure:
        description: Use *bool to allow nil check
        type: boolean
      name:
        type: string
      parent_folder_id:
        type: string
      password:
        type: string
      storage_detail:
        properties:
          file_type:
            description: Required field
            type: string
          size:
            description: Required field
            type: integer
        required:
        - file_type
        - size
        type: object
      tags:
        items:
          type: string
        type: array
    required:
    - name
    type: object
  presenters.CreateFileOutput:
    properties:
      created_at:
        type: string
      description:
        type: string
      has_password:
        type: boolean
      id:
        type: string
      is_folder:
        type: boolean
      is_secure:
        type: boolean
      name:
        type: string
      opened_at:
        type: string
      owner_id:
        type: string
      parent_folder_id:
        type: string
      put_object_url:
        type: string
      storage_detail:
        $ref: '#/definitions/presenters.StorageDetailOuput'
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
      url_expiry:
        type: integer
    type: object
  presenters.FileOutput:
    properties:
      created_at:
        type: string
      description:
        type: string
      has_password:
        type: boolean
      id:
        type: string
      is_folder:
        type: boolean
      is_secure:
        type: boolean
      name:
        type: string
      opened_at:
        type: string
      owner_id:
        type: string
      parent_folder_id:
        type: string
      storage_detail:
        $ref: '#/definitions/presenters.StorageDetailOuput'
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  presenters.FindFileOfUserOuput:
    properties:
      files:
        items:
          $ref: '#/definitions/presenters.FileOutput'
        type: array
    type: object
  presenters.StorageDetailOuput:
    properties:
      file_size:
        type: integer
      file_type:
        type: string
    type: object
  presenters.UploadedFileOutput:
    properties:
      created_at:
        type: string
      description:
        type: string
      has_password:
        type: boolean
      id:
        type: string
      is_folder:
        type: boolean
      is_secure:
        type: boolean
      name:
        type: string
      opened_at:
        type: string
      owner_id:
        type: string
      parent_folder_id:
        type: string
      storage_detail:
        $ref: '#/definitions/presenters.StorageDetailOuput'
      tags:
        items:
          type: string
        type: array
      updated_at:
        type: string
    type: object
  response.AppResponse:
    properties:
      message:
        type: string
      sucess:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample API for file storage
  title: Storage App API
  version: "1.0"
paths:
  /auth/exchange:
    post:
      consumes:
      - application/json
      description: Exchange Google auth code
      parameters:
      - description: auth code from google oauth2 resposne
        in: body
        name: authCode
        required: true
        schema:
          $ref: '#/definitions/presenter.ExchangeTokenInput'
      produces:
      - application/json
      responses:
        "201":
          description: Login success
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  type: object
              type: object
        "401":
          description: Wrong auth code
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  type: object
              type: object
      tags:
      - auth
  /files:
    get:
      consumes:
      - application/json
      description: Find file of user
      parameters:
      - description: file is in other folder, if null fetch all file
        in: query
        name: is_in_folder
        type: boolean
      - description: file is folder or not, if null fetch all file and folder
        in: query
        name: is_folder
        type: boolean
      - description: 'sort field, allow short field: created_at, updated_at, opened_at'
        in: query
        name: sort_by
        required: true
        type: string
      - description: sort direction
        in: query
        name: is_asc
        required: true
        type: boolean
      - description: for pagination
        in: query
        name: offset
        required: true
        type: integer
      - description: for pagination
        in: query
        name: limit
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Find file of user sucess
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  $ref: '#/definitions/presenters.FindFileOfUserOuput'
              type: object
        "400":
          description: Un allow sort field, lack of query
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  type: object
              type: object
      tags:
      - files
    post:
      consumes:
      - application/json
      description: Create new file
      parameters:
      - description: file information
        in: body
        name: file
        required: true
        schema:
          $ref: '#/definitions/presenters.CreateFileInput'
      produces:
      - application/json
      responses:
        "201":
          description: Create file sucess, storage_detail.put_object_url is presign
            url for upload file
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  $ref: '#/definitions/presenters.CreateFileOutput'
              type: object
        "403":
          description: User don't have permission for this file operation
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: Parent folder not found, Tag of file not found
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  type: object
              type: object
      tags:
      - files
  /files/uploaded:
    patch:
      consumes:
      - application/json
      description: Uploaded file
      parameters:
      - description: file id
        in: path
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Uploaded file sucess
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  $ref: '#/definitions/presenters.UploadedFileOutput'
              type: object
        "403":
          description: file is folder
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  type: object
              type: object
        "404":
          description: file not found
          schema:
            allOf:
            - $ref: '#/definitions/response.AppResponse'
            - properties:
                data:
                  type: object
              type: object
      tags:
      - files
swagger: "2.0"
